N_h<-c(1054,220,1382,422)
est_var<-(1-n_h/N_h)*N_h^2*s_h$area^2/n_h
est_tots<-mn$area*N_h
tots<-sum(est_tots)
var_tots<-sum(var)
se<-sqrt(var_tots)
library(SDaA)
df<-agstrat
df4<-df[,c(3,15)]
df4<-data.frame(list(agstrat$acres92)[[1]],list(agstrat$region)[[1]])
colnames(df4)<-c('area','region')
mn<-aggregate(df4,list(df4$region),mean)
s_h<-aggregate(df4,list(df4$region),sd)
n_h<-c(103,21,135,41)
N_h<-c(1054,220,1382,422)
View(mn)
View(s_h)
s_h$area^2
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h$area^2/n_h)
est_var
est_tots<-mn$area*N_h
est_tots
var_tots<-sum(var)
var_tots<-sum(est_var)
se<-sqrt(var_tots)
CI4<-c(tots-1.96*se,tots+1.96*se)
tots<-sum(est_tots)
CI4<-c(tots-1.96*se,tots+1.96*se)
CI4
library(SDaA)
#QUESTION 3
data("agsrs")
alpha<-1.96
N<-3078
n<-300
#CI= t+- alpha(SE(t))
acres92<-agsrs$acres92
#we don't know the enire total so we use the estimate:
#t<-N*y_bar
y_bar<-mean(acres92)
s<-sd(acres92)
t_hat<-N*y_bar
se_y_bar<-sqrt((1-n/N)*s^2/n)
CI<-c(t_hat-se_y_bar*alpha,t_hat+se_y_bar*alpha)
CI[1]
CI[2]
df5<-(Nh=N_h,sh=s_h$area)
df5<-data.frame(Nh=N_h,sh=s_h$area)
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*300/3078
View(df5)
df5$nh<-df5$Nhsh*(300/3078)
df5<-data.frame(Nh=N_h,sh=sqrt(est_var$area))
df5<-data.frame(Nh=N_h,sh=sqrt(est_var))
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*(300/3078)
df<-agstrat
df4<-df[,c(3,15)]
df4<-data.frame(list(agstrat$acres92)[[1]],list(agstrat$region)[[1]])
colnames(df4)<-c('area','region')
mn<-aggregate(df4,list(df4$region),mean)
s_h<-aggregate(df4,list(df4$region),sd)
n_h<-c(103,21,135,41)
N_h<-c(1054,220,1382,422)
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h$area^2/n_h)
est_tots<-mn$area*N_h
tots<-sum(est_tots)
var_tots<-sum(est_var)
se<-sqrt(var_tots)
#CI:
CI4<-c(tots-1.96*se,tots+1.96*se)
df5<-data.frame(Nh=N_h,sh=sqrt(est_var))
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*(300/3078)
df5$nh<-df5$Nhsh*(300/sum(df5$Nhsh))
nh<-ceiling(df5$nh)
sum(nh)
nh<-floor(df5$nh)
sum(nh)
sum(75,4,151,70)
#QUESTION 6:
d6<-agpop
View(d6)
set.seed(5234)
#QUESTION 6:
df<-agpop
set.seed(5234)
df6<-df[,c(3,15)]
View(df6)
n_h<-c(75,4,151,70)
reg<-c('NC','NE','S','W')
cc<-data.frame(ar=c(),reg=c())
for(i in 1:4){
ind<-sample(1:length(df6$region[df6$region==reg[i]]),n_h[i],replace=FALSE)
cc=rbind(cc,df6[ind,])
}
View(cc)
is.na(df6)
sort(cc)
sort(cc$region)
cc[order(cc$region),]
df62<-cc[order(cc$region),]
View(df62)
mn6<-aggregate(df62,list(df62$region),mean)
sd6<-aggregate(df62,list(df62$region),sd)
s_h6<-aggregate(df62,list(df62$region),sd)
est_tots6<-mn6$acres92*N_h
est_tots6<-mn6$acres92*N_h
est_var6<-(1-n_h/N_h)*(N_h^2)*(s_h6$acres92^2)/(n_h)
tots6<-sum(est_tots6)
se6<-sqrt(sum(est_var6))
#CI6:
CI6<-c(tots6-1.96*se6,tots6+1.96*se6)
View(mn)
View(mn6)
View(s_h)
View(s_h6)
table(df62)
table(df62$acres92)
aggregate(df62,list(df62$region),nrow)
aggregate(df62,list(df62$region),count)
aggregate(df62,list(df62$region),length)
nrow(df62[df62$region=='NC',])
i<-1
n_h[i]
cc<-data.frame(ar=c(),reg=c())
for(i in 1:4){
ind<-sample(1:nrow(df62[df62$region==reg[i]]),n_h[i],replace=FALSE)
cc=rbind(cc,df6[ind,])
}
for(i in 1:4){
ind<-sample(1:nrow(df62[df62$region==reg[i],]),n_h[i],replace=FALSE)
cc=rbind(cc,df6[ind,])
}
nrow(df62[df62$region==reg[i],])
n_h[i]
n_h<-c(75,4,151,70)
n_h[i]
reg[i]
nrow(df62[df62$region==reg[i],]
)
df<-agstrat
df4<-df[,c(3,15)]
df4<-data.frame(list(agstrat$acres92)[[1]],list(agstrat$region)[[1]])
colnames(df4)<-c('area','region')
mn<-aggregate(df4,list(df4$region),mean)
s_h<-aggregate(df4,list(df4$region),sd)
n_h<-c(103,21,135,41)
N_h<-c(1054,220,1382,422)
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h$area^2/n_h)
est_tots<-mn$area*N_h
tots<-sum(est_tots)
var_tots<-sum(est_var)
se<-sqrt(var_tots)
#CI:
CI4<-c(tots-1.96*se,tots+1.96*se)
#The Stratified gives a higher confidence interval than SRS
#QUESTION 5:
df5<-data.frame(Nh=N_h,sh=sqrt(est_var))
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*(300/sum(df5$Nhsh))
nh<-floor(df5$nh)
n_h<-c(75,4,151,70)
reg<-c('NC','NE','S','W')
sum(nh)
#{NC,NE,S,W}
#{75,4,151,70=300}
#QUESTION 6:
df<-agpop
set.seed(5234)
df6<-df[,c(3,15)]
cc<-data.frame(ar=c(),reg=c())
df62<-df[,c(3,15)]
cc<-data.frame(ar=c(),reg=c())
for(i in 1:4){
ind<-sample(1:nrow(df62[df62$region==reg[i],]),n_h[i],replace=FALSE)
cc=rbind(cc,df6[ind,])
}
View(cc)
nrow(df62[df62$region=='NC'])
View(df62)
nrow(df62[df62$region=='NC',])
View(cc)
nrow(cc[cc$region=='NC',])
View(df)
df<-agstrat
df4<-df[,c(3,15)]
df4<-data.frame(list(agstrat$acres92)[[1]],list(agstrat$region)[[1]])
colnames(df4)<-c('area','region')
mn<-aggregate(df4,list(df4$region),mean)
s_h<-aggregate(df4,list(df4$region),sd)
n_h<-c(103,21,135,41)
N_h<-c(1054,220,1382,422)
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h$area^2/n_h)
est_tots<-mn$area*N_h
tots<-sum(est_tots)
var_tots<-sum(est_var)
se<-sqrt(var_tots)
#CI:
CI4<-c(tots-1.96*se,tots+1.96*se)
#The Stratified gives a higher confidence interval than SRS
#QUESTION 5:
df5<-data.frame(Nh=N_h,sh=sqrt(est_var))
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*(300/sum(df5$Nhsh))
nh<-floor(df5$nh)
n_h<-c(75,4,151,70)
reg<-c('NC','NE','S','W')
sum(nh)
#{NC,NE,S,W}
#{75,4,151,70=300}
#QUESTION 6:
df<-agpop
df<-df[order(df$region),]
View(df)
set.seed(5234)
df62<-df[,c(3,15)]
cc<-data.frame(ar=c(),reg=c())
for(i in 1:4){
ind<-sample(1:nrow(df62[df62$region==reg[i],]),n_h[i],replace=FALSE)
cc=rbind(cc,df6[ind,])
}
for(i in 1:4){
ind<-sample(1:nrow(df62[df62$region==reg[i],]),n_h[i],replace=FALSE)
cc=rbind(cc,df62[ind,])
}
View(cc)
#check how many rows for 'NC'
nrow(cc[cc$region=='NC',])
sample(which(df62[df62$region=='NC',]),75,replace=FALSE)
which(df62[df62$region=='NC',])
which(df62$region=='NC')
sample(which(df62$region=='NC'),75,replace=FALSE)
df<-agstrat
df4<-df[,c(3,15)]
df4<-data.frame(list(agstrat$acres92)[[1]],list(agstrat$region)[[1]])
colnames(df4)<-c('area','region')
mn<-aggregate(df4,list(df4$region),mean)
s_h<-aggregate(df4,list(df4$region),sd)
n_h<-c(103,21,135,41)
N_h<-c(1054,220,1382,422)
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h$area^2/n_h)
est_tots<-mn$area*N_h
tots<-sum(est_tots)
var_tots<-sum(est_var)
se<-sqrt(var_tots)
#CI:
CI4<-c(tots-1.96*se,tots+1.96*se)
#The Stratified gives a higher confidence interval than SRS
#QUESTION 5:
df5<-data.frame(Nh=N_h,sh=sqrt(est_var))
df5$Nhsh<-df5$Nh*df5$sh
df5$nh<-df5$Nhsh*(300/sum(df5$Nhsh))
nh<-floor(df5$nh)
n_h<-c(75,4,151,70)
reg<-c('NC','NE','S','W')
sum(nh)
#{NC,NE,S,W}
#{75,4,151,70=300}
#QUESTION 6:
df<-agpop
df<-df[order(df$region),]
set.seed(5234)
df62<-df[,c(3,15)]
cc<-data.frame(ar=c(),reg=c())
for(i in 1:4){
ind<-sample(which(df62$region==reg[i]),n_h[i],replace=FALSE)
cc=rbind(cc,df62[ind,])
}
#check how many rows for 'NC'
nrow(cc[cc$region=='NC',])
df62<-cc[order(cc$region),]
mn6<-aggregate(df62,list(df62$region),mean)
s_h6<-aggregate(df62,list(df62$region),sd)
est_tots6<-mn6$acres92*N_h
est_var6<-(1-n_h/N_h)*(N_h^2)*(s_h6$acres92^2)/(n_h)
tots6<-sum(est_tots6)
se6<-sqrt(sum(est_var6))
#CI6:
CI6<-c(tots6-1.96*se6,tots6+1.96*se6)
se6/se
df7<-otters
View(df7)
length(df7$habitat==1)
length(df7$habitat==2)
length(df7$habitat[df$habitat==2])
n_h<-c(19,20,22,21)
mean7<-aggregate(df7,list(df7$habitat),mean)
s_h7<-aggregate(df7,list(df7$habitat),sd)
N_h<-c(89,61,40,47)
View(df7)
View(s_h7)
View(mean7)
est_tots<-(1-n_h/N_h)*(N_h^2)*(s_h7$holts^2)/n_h
est_var<-(1-n_h/N_h)*(N_h^2)*(s_h7$holts^2)/n_h
est_tots<-N_h*mean7$holts
est_var7<-(1-n_h/N_h)*(N_h^2)*(s_h7$holts^2)/n_h
est_tots7<-N_h*mean7$holts
tots7<-sum(est_tots7)
se7<-sqrt(sum(est_var7))
#CI:
CI7<-c(tots7-1.96*se7,tots7+1.96*se7)
library(mitools)
library(survey)
case=rep(seq(1,12,1),each=3);
can=seq(1,36,1);
frg=c(1,5,7,4,2,4,0,1,2,3,6,6,4,9,8,0,7,3,5,5,1,3,0,2,7,3,5,3,1,4,4,7,9,0,0,0)
#Cluster sizes
csize=rep(24,36)
noclusters=rep(580,36)
# Sampling weights
N=580
n=12;
mi=rep(3,36)
wght=(N*csize)/(n*mi)
corndf=data.frame(case,can,csize,noclusters,wght)
corn.svy=svydesign(id=~case+can,weights=wght,data=corndf,fpc=~noclusters+csize)
svymean(frg,design=corn.svy)
m<-3.64
corn.svy$variables
corn.svy$cluster
M_i<-12
#Total:
t<-M_i*m
View(corndf)
corn.svy
corn.svy$variables
mfrg<-mean(frg)
si<-sd(frg)
knitr::opts_chunk$set(echo = TRUE)
c1<-c(1,4,0,3,4,0,5,3,7,3,4,0)
c2<-c(5,2,1,6,9,7,5,0,3,1,7,0)
c3<-c(7,4,2,6,8,3,1,2,5,4,9,0)
df<-data.frame(c1=c1,c2=c2,c3=c3)
View(df)
df$yi_bar<-apply(df,1,mean)
N=580
n=12
Mi=24
mi=3
for(i in 1:nrow(df)){
df$si_sq[i]<-(sum(df[i,c(1,2,3)]-df[i,4]))^2/mi-1
}
for(i in 1:nrow(df)){
df$si_sq[i]<-(sum(df[i,]-df[i,4]))^2/mi-1
}
df[1,c(1:3)]
df[1,4]
for(i in 1:nrow(df)){
yij<-df[i,c(1:3)]
df$si_sq[i]<-sum((yij-df[i,4])^2)/mi-1
}
apply(df[,1:3],1,sd)
for(i in 1:nrow(df)){
yij<-df[i,c(1:3)]
df$si_sq[i]<-sum((yij-df[i,4])^2)/mi
}
for(i in 1:nrow(df)){
yij<-df[i,c(1:3)]
df$si_sq[i]<-sum((yij-df[i,4])^2)/mi-1
}
for(i in 1:nrow(df)){
summ<-0
for(j in 1:3 ){
summ<-(df[i,j]-df[i,4])^2+summ
}
df$si_sq[i]<-summ/mi-1
}
(apply(df[,1:3],1,sd))^2
df$si_sq<-(apply(df[,1:3],1,sd))^2
df$ti<-apply(df[,1:3],1,sum)
df$ti_hat<-df$yi_bar*Mi
tunb_hat<-(N/n)*sum(df$ti_hat)
df$err<-(apply(df[,1:3],1,sd))^2
si_sq<-sum(df$err)/mi-1
Var_tunb1<-N^2*(1-n/N)*st_sq/n
tbyN<-tunb_hat/N
st_sq<-sum((df$ti_hat-tbyN)^2)/n-1
si_sq<-sum(df$err)/mi-1
Var_tunb1<-N^2*(1-n/N)*st_sq/n
Var_tunb2<-N*(1-mi/Mi)*Mi^2*si_sq/mi
Var_tunb<-Var_tunb1+Var_tunb2
se_tunb<-sqrt(Var_tunb)
se_tunb
K<-N*Mi
install.packages('gtools')
library(gtools)
library(gtools)
M0=2000
t=600
N=4
n=2
df=matrix(nrow=4,ncol=2,c(110,44,265,82,360,112,1265,362),byrow=TRUE)
M=df[,1]
phi=M/M0
w=1/(n*phi)
perm<-permutations(n=4,r=2,v=1:4,repeats.allowed = TRUE)
samp=list()
t_hat=c()
psamp=c()
for(i in 1:nrow(perm)){
indi=perm[i,]
samp[[i]]<-cbind(df[indi,],w[indi])
t_hat[i]<-sum(samp[[i]][,2]*samp[[i]][,3])
psamp[i]<-prod(phi[indi])
}
E_t_hat=sum(t_ht*psamp)
E_t_hat
}
library(gtools)
M0=2000
t=600
N=4
n=2
df=matrix(nrow=4,ncol=2,c(110,44,265,82,360,112,1265,362),byrow=TRUE)
M=df[,1]
phi=M/M0
w=1/(n*phi)
perm<-permutations(n=4,r=2,v=1:4,repeats.allowed = TRUE)
samp=list()
t_hat=c()
psamp=c()
for(i in 1:nrow(perm)){
indi=perm[i,]
samp[[i]]<-cbind(df[indi,],w[indi])
t_hat[i]<-sum(samp[[i]][,2]*samp[[i]][,3])
psamp[i]<-prod(phi[indi])
}
E_t_hat=sum(t_hat*psamp)
E_t_hat
}
V_t_hat<-sum(psamp*(t_hat-E_t_hat)^2)
V_t_hat
n=2
com<-combn(x=1:4,m=2)
samp=list()
y_bar=c()
psamp=1/ncol(com)
for(i in 1:ncol(com)){
ind=com[,i]
samp[[i]]=df[ind,]
y_bar[i]=sum(samp[[i]][,2])/n
}
E_t_hat = N*sum(psamp*y_bar)
E_t_hats
E_t_hat
y_bar_u=mean(df[,2])
s2=1/(N-1)*sum((df[,2]-y_bar_u)^2)
V_t_hat<-N^2*s2*(1-n/N)/n
V_t_hat
install.packages('Rtools')
setwd('C:/Users/Deepika/Documents/ADS/Project 4/Fall2018-Project4-sec2--sec2proj4_grp5/data')
load('total_final_score.RData')
require(data.table) ## 1.9.2
group <- as.data.table(total_final_data)
df2<-group[group[, .I[which.max(pred)], by=total_final_data$rep.errorwords..each...5.]$V1]
df2<-df2[,c(-7)]
corrected<-df2[,c(1,2)]
colnames(corrected)<-c('error','ChosenCandidate')
test_cleaned<-read.table('test_clean.txt')
test_cleaned<-read.table('test_clean.txt',header=FALSE)
test_cleaned<-read.table('test_clean.txt',header=FALSE,sep="")
test_cleaned[,c(1:10)]
library(qdap)
install.packages('qdap')
library(qdap)
tclean<-t(test_cleaned)
test_cleaned <- mgsub(corrected$error, corrected$ChosenCandidate, tclean)
for(j in seq_along(corrected$error)){
test_cleaned <- gsub(corrected$error[j], corrected$ChosenCandidate[j], tclean)
}
View(test_cleaned)
View(corrected)
for(j in seq_along(corrected$error)){
t_cleaned <- gsub(corrected$error[j], corrected$ChosenCandidate[j], tclean)
}
View(t_cleaned)
test_cleaned<-read.table('test_clean.txt',header=FALSE,sep="\t")
library(qdap)
tclean<-t(test_cleaned)
test_cleaned <- mgsub(corrected$error, corrected$ChosenCandidate, tclean)
for(j in seq_along(corrected$error)){
t_cleaned <- gsub(corrected$error[j], corrected$ChosenCandidate[j], tclean)
}
View(t_cleaned)
View(test_cleaned)
test_cleaned<-read.table('test_clean.txt',header=FALSE,sep="\t")
library(qdap)
tclean<-t(test_cleaned)
for(j in seq_along(corrected$error)){
t_cleaned <- gsub(corrected$error[j], corrected$ChosenCandidate[j], tclean)
}
View(t_cleaned)
View(test_cleaned)
class(corrected$error[1])
class(corrected$ChosenCandidate[1])
as.character(corrected$error[1])
for(j in seq_along(corrected$error)){
t_cleaned <- gsub(as.character(corrected$error[j]), corrected$ChosenCandidate[j], tclean)
}
View(t_cleaned)
class(tclean)
for(j in seq_along(corrected$error)){
t_cleaned <- gsub(as.character(corrected$error[j]), corrected$ChosenCandidate[j], as.character(tclean))
}
View(tclean)
t_cleaned <- mgsub(as.character(corrected$error), corrected$ChosenCandidate, as.character(tclean))
write.table(t_cleaned, 'corrected_text.txt', append = FALSE, sep = " ",
col.names = TRUE)
View(corrected)
write.table(t_cleaned, 'corrected_text.txt', append = FALSE, sep = " ",
col.names = FALSE)
